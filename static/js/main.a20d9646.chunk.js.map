{"version":3,"sources":["components/Section/Section.module.scss","components/MainContainer/MainContainer.module.scss","components/PageHeader/PageHeader.module.scss","components/MainContainer/MainContainer.js","components/PageHeader/PageHeader.js","components/Section/Section.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","App.js","index.js"],"names":["module","exports","MainContainer","className","styles","this","props","children","Component","defaultProps","PageHeader","title","Section","Section__Title","ContactForm","state","name","number","handleChange","event","currentTarget","value","setState","handleSubmit","preventDefault","whenSubmit","formReset","onSubmit","type","pattern","required","onChange","Filter","filterValue","whenChange","App","contacts","initialContacts","filter","prevState","id","uuidv4","filteredContacts","contact","toLowerCase","includes","map","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a20d9646.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Section\":\"Section_Section__2SNn4\",\"Section__Title\":\"Section_Section__Title__3rndl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MainContainer\":\"MainContainer_MainContainer__2QkE0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"PageHeader\":\"PageHeader_PageHeader__bYcxP\"};","import { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './MainContainer.module.scss';\n\nclass MainContainer extends Component {\n  static propTypes = {\n    children: PropTypes.node,\n  };\n\n  static defaultProps = {\n    children: (<></>),\n  };\n\n  render() {\n    return (\n      <div className={styles.MainContainer}>{this.props.children}</div>\n    );\n  };\n};\n\nexport default MainContainer;\n","import { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './PageHeader.module.scss';\n\nclass PageHeader extends Component {\n  static propTypes = {\n    title: PropTypes.string,\n    children: PropTypes.node,\n  };\n\n  static defaultProps = {\n    title: 'Where is your title?',\n    children: (<></>),\n  };\n\n  render() {\n    return (\n      <div className={styles.PageHeader}>{this.props.title}</div>\n    );\n  };\n};\n\nexport default PageHeader;\n","import { Component } from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Section.module.scss';\r\n\r\nclass Section extends Component {\r\n  static propTypes = {\r\n    title: PropTypes.string,\r\n    children: PropTypes.node,\r\n  };\r\n\r\n  static defaultProps = {\r\n    title: 'Where is your title?',\r\n    children: (<></>),\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <section className={styles.Section}>\r\n        <h2 className={styles.Section__Title}>{this.props.title}</h2>\r\n          {this.props.children}\r\n        </section>\r\n      </>\r\n    );\r\n  };\r\n};\r\n\r\nexport default Section;","import { Component } from \"react\";\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: ''\r\n  }\r\n\r\n  handleChange = event => {\r\n    const { name, value } = event.currentTarget;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    this.props.whenSubmit(this.state);\r\n    this.formReset();\r\n  };\r\n\r\n  formReset = () => {\r\n    this.setState({name: '', number: '',});\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <form onSubmit={this.handleSubmit}>\r\n          <label>\r\n            {`Name: `}\r\n            <input\r\n              type=\"text\"\r\n              name=\"name\"\r\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n              required\r\n              value={this.state.name}\r\n              onChange={this.handleChange}\r\n              />\r\n          </label>\r\n          <br />\r\n          <label>\r\n            {`Number: `}\r\n            <input\r\n              type=\"tel\"\r\n              name=\"number\"\r\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n              title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n              required\r\n              value={this.state.number}\r\n              onChange={this.handleChange}\r\n              />\r\n          </label>\r\n          <br />\r\n          <button\r\n            type=\"submit\"\r\n            >\r\n            Add Contact\r\n          </button>\r\n        </form>\r\n      </>\r\n    );\r\n  };\r\n};\r\n\r\nexport default ContactForm;","import { Component } from \"react\";\r\n\r\nclass Filter extends Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <label>\r\n          {`Find by Name: `}\r\n          <input\r\n            type=\"text\"\r\n            name=\"filter\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n            value={this.props.filterValue}\r\n            onChange={this.props.whenChange}\r\n          />\r\n        </label>\r\n      </>\r\n    );\r\n  };\r\n};\r\n\r\nexport default Filter;","import { Component } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport MainContainer from './components/MainContainer';\nimport PageHeader from './components/PageHeader';\nimport Section from './components/Section';\nimport ContactForm from './components/ContactForm';\nimport Filter from './components/Filter';\nimport initialContacts from './utils/contacts.json';\n\nclass App extends Component {\n\n  state = {\n    contacts: initialContacts,\n    filter: '',\n  }\n\n  handleChange = event => {\n    const { name, value } = event.currentTarget;\n    this.setState({ [name]: value });\n  };\n\n  whenSubmit = ({name, number}) => {\n    this.setState(prevState =>\n    ({\n      contacts: [...prevState.contacts,\n      { id: uuidv4(), name, number }]\n    }));\n  };\n\n  formReset = () => {\n    this.setState({name: '', number: '',});\n  };\n\n  render() {\n    const filteredContacts = this.state.contacts.filter(\n      contact => contact.name.toLowerCase().includes(this.state.filter.toLowerCase())\n    );\n\n    return (\n\n      <MainContainer>\n\n        <PageHeader title=\"React Homework 02. Phonebook\" />\n\n\n        <Section title=\"Add Contact\">\n          <ContactForm whenSubmit={this.whenSubmit} />\n          {/* <form onSubmit={this.handleSubmit}>\n            <label>\n              {`Name: `}\n              <input\n                type=\"text\"\n                name=\"name\"\n                pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n                required\n                value={this.state.name}\n                onChange={this.handleChange}\n                />\n            </label>\n            <br />\n            <label>\n              {`Number: `}\n              <input\n                type=\"tel\"\n                name=\"number\"\n                pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n                required\n                value={this.state.number}\n                onChange={this.handleChange}\n                />\n            </label>\n            <br />\n            <button\n              type=\"submit\"\n              >\n              Add Contact\n            </button>\n          </form> */}\n        </Section>\n\n        <Section title=\"Contacts\">\n          <Filter\n            filterValue={this.state.filter}\n            whenChange={this.handleChange}\n          />\n\n          {/* <label>\n            {`Find by Name: `}\n            <input\n              type=\"text\"\n              name=\"filter\"\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n              required\n              value={this.state.filter}\n              onChange={this.handleChange}\n            />\n          </label> */}\n          <br />\n          <ul>\n            {filteredContacts.map((contact) => (\n            // {this.state.contacts.map((contact) => (\n              <li key={contact.id}>\n                {contact.name}: {contact.number}\n              </li>\n            ))}\n          </ul>\n        </Section>\n\n        {/* <Section title=\"Feedback Statistics\">\n          {this.countTotalFeedback() > 0\n            ? <Statistics\n              good={this.state.good}\n              neutral={this.state.neutral}\n              bad={this.state.bad}\n              total={this.countTotalFeedback()}\n              likes={this.countPositiveFeedbackPercentage()}\n            />\n            : <Notification\n              message=\"No feedback given\"\n            />\n          }\n        </Section> */}\n\n      </MainContainer>\n\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}